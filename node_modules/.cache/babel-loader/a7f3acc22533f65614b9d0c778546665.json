{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getjQuery } from '../util/index';\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/;\nconst stripNameRegex = /\\..*/;\nconst stripUidRegex = /::\\d+$/;\nconst eventRegistry = {}; // Events storage\nlet uidEvent = 1;\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n};\nconst customEventsRegex = /^(mouseenter|mouseleave)/i;\nconst nativeEvents = new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll']);\n\n/**\n * ------------------------------------------------------------------------\n * Private methods\n * ------------------------------------------------------------------------\n */\n\nfunction getUidEvent(element, uid) {\n  return uid && `${uid}::${uidEvent++}` || element.uidEvent || uidEvent++;\n}\nfunction getEvent(element) {\n  const uid = getUidEvent(element);\n  element.uidEvent = uid;\n  eventRegistry[uid] = eventRegistry[uid] || {};\n  return eventRegistry[uid];\n}\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    event.delegateTarget = element;\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn);\n    }\n    return fn.apply(element, [event]);\n  };\n}\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector);\n    for (let {\n      target\n    } = event; target && target !== this; target = target.parentNode) {\n      for (let i = domElements.length; i--;) {\n        if (domElements[i] === target) {\n          event.delegateTarget = target;\n          if (handler.oneOff) {\n            // eslint-disable-next-line unicorn/consistent-destructuring\n            EventHandler.off(element, event.type, selector, fn);\n          }\n          return fn.apply(target, [event]);\n        }\n      }\n    }\n\n    // To please ESLint\n    return null;\n  };\n}\nfunction findHandler(events, handler, delegationSelector = null) {\n  const uidEventList = Object.keys(events);\n  for (let i = 0, len = uidEventList.length; i < len; i++) {\n    const event = events[uidEventList[i]];\n    if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {\n      return event;\n    }\n  }\n  return null;\n}\nfunction normalizeParams(originalTypeEvent, handler, delegationFn) {\n  const delegation = typeof handler === 'string';\n  const originalHandler = delegation ? delegationFn : handler;\n  let typeEvent = getTypeEvent(originalTypeEvent);\n  const isNative = nativeEvents.has(typeEvent);\n  if (!isNative) {\n    typeEvent = originalTypeEvent;\n  }\n  return [delegation, originalHandler, typeEvent];\n}\nfunction addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return;\n  }\n  if (!handler) {\n    handler = delegationFn;\n    delegationFn = null;\n  }\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (customEventsRegex.test(originalTypeEvent)) {\n    const wrapFn = fn => {\n      return function (event) {\n        if (!event.relatedTarget || event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget)) {\n          return fn.call(this, event);\n        }\n      };\n    };\n    if (delegationFn) {\n      delegationFn = wrapFn(delegationFn);\n    } else {\n      handler = wrapFn(handler);\n    }\n  }\n  const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);\n  const events = getEvent(element);\n  const handlers = events[typeEvent] || (events[typeEvent] = {});\n  const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null);\n  if (previousFn) {\n    previousFn.oneOff = previousFn.oneOff && oneOff;\n    return;\n  }\n  const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''));\n  const fn = delegation ? bootstrapDelegationHandler(element, handler, delegationFn) : bootstrapHandler(element, handler);\n  fn.delegationSelector = delegation ? handler : null;\n  fn.originalHandler = originalHandler;\n  fn.oneOff = oneOff;\n  fn.uidEvent = uid;\n  handlers[uid] = fn;\n  element.addEventListener(typeEvent, fn, delegation);\n}\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector);\n  if (!fn) {\n    return;\n  }\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));\n  delete events[typeEvent][fn.uidEvent];\n}\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {};\n  Object.keys(storeElementEvent).forEach(handlerKey => {\n    if (handlerKey.includes(namespace)) {\n      const event = storeElementEvent[handlerKey];\n      removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);\n    }\n  });\n}\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  event = event.replace(stripNameRegex, '');\n  return customEvents[event] || event;\n}\nconst EventHandler = {\n  on(element, event, handler, delegationFn) {\n    addHandler(element, event, handler, delegationFn, false);\n  },\n  one(element, event, handler, delegationFn) {\n    addHandler(element, event, handler, delegationFn, true);\n  },\n  off(element, originalTypeEvent, handler, delegationFn) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return;\n    }\n    const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn);\n    const inNamespace = typeEvent !== originalTypeEvent;\n    const events = getEvent(element);\n    const isNamespace = originalTypeEvent.startsWith('.');\n    if (typeof originalHandler !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!events || !events[typeEvent]) {\n        return;\n      }\n      removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null);\n      return;\n    }\n    if (isNamespace) {\n      Object.keys(events).forEach(elementEvent => {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));\n      });\n    }\n    const storeElementEvent = events[typeEvent] || {};\n    Object.keys(storeElementEvent).forEach(keyHandlers => {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '');\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        const event = storeElementEvent[keyHandlers];\n        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector);\n      }\n    });\n  },\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null;\n    }\n    const $ = getjQuery();\n    const typeEvent = getTypeEvent(event);\n    const inNamespace = event !== typeEvent;\n    const isNative = nativeEvents.has(typeEvent);\n    let jQueryEvent;\n    let bubbles = true;\n    let nativeDispatch = true;\n    let defaultPrevented = false;\n    let evt = null;\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args);\n      $(element).trigger(jQueryEvent);\n      bubbles = !jQueryEvent.isPropagationStopped();\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();\n      defaultPrevented = jQueryEvent.isDefaultPrevented();\n    }\n    if (isNative) {\n      evt = document.createEvent('HTMLEvents');\n      evt.initEvent(typeEvent, bubbles, true);\n    } else {\n      evt = new CustomEvent(event, {\n        bubbles,\n        cancelable: true\n      });\n    }\n\n    // merge custom information in our event\n    if (typeof args !== 'undefined') {\n      Object.keys(args).forEach(key => {\n        Object.defineProperty(evt, key, {\n          get() {\n            return args[key];\n          }\n        });\n      });\n    }\n    if (defaultPrevented) {\n      evt.preventDefault();\n    }\n    if (nativeDispatch) {\n      element.dispatchEvent(evt);\n    }\n    if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {\n      jQueryEvent.preventDefault();\n    }\n    return evt;\n  }\n};\nexport default EventHandler;","map":{"version":3,"names":["getjQuery","namespaceRegex","stripNameRegex","stripUidRegex","eventRegistry","uidEvent","customEvents","mouseenter","mouseleave","customEventsRegex","nativeEvents","Set","getUidEvent","element","uid","getEvent","bootstrapHandler","fn","handler","event","delegateTarget","oneOff","EventHandler","off","type","apply","bootstrapDelegationHandler","selector","domElements","querySelectorAll","target","parentNode","i","length","findHandler","events","delegationSelector","uidEventList","Object","keys","len","originalHandler","normalizeParams","originalTypeEvent","delegationFn","delegation","typeEvent","getTypeEvent","isNative","has","addHandler","test","wrapFn","relatedTarget","contains","call","handlers","previousFn","replace","addEventListener","removeHandler","removeEventListener","Boolean","removeNamespacedHandlers","namespace","storeElementEvent","forEach","handlerKey","includes","on","one","inNamespace","isNamespace","startsWith","elementEvent","slice","keyHandlers","trigger","args","$","jQueryEvent","bubbles","nativeDispatch","defaultPrevented","evt","Event","isPropagationStopped","isImmediatePropagationStopped","isDefaultPrevented","document","createEvent","initEvent","CustomEvent","cancelable","key","defineProperty","get","preventDefault","dispatchEvent"],"sources":["C:/Users/Marcelo Machado/dsCatalog/CatalogoDeProdutos/frontend/catalogodeprodutos/node_modules/bootstrap/js/src/dom/event-handler.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getjQuery } from '../util/index'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/\nconst stripNameRegex = /\\..*/\nconst stripUidRegex = /::\\d+$/\nconst eventRegistry = {} // Events storage\nlet uidEvent = 1\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n}\nconst customEventsRegex = /^(mouseenter|mouseleave)/i\nconst nativeEvents = new Set([\n  'click',\n  'dblclick',\n  'mouseup',\n  'mousedown',\n  'contextmenu',\n  'mousewheel',\n  'DOMMouseScroll',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'selectstart',\n  'selectend',\n  'keydown',\n  'keypress',\n  'keyup',\n  'orientationchange',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel',\n  'gesturestart',\n  'gesturechange',\n  'gestureend',\n  'focus',\n  'blur',\n  'change',\n  'reset',\n  'select',\n  'submit',\n  'focusin',\n  'focusout',\n  'load',\n  'unload',\n  'beforeunload',\n  'resize',\n  'move',\n  'DOMContentLoaded',\n  'readystatechange',\n  'error',\n  'abort',\n  'scroll'\n])\n\n/**\n * ------------------------------------------------------------------------\n * Private methods\n * ------------------------------------------------------------------------\n */\n\nfunction getUidEvent(element, uid) {\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++\n}\n\nfunction getEvent(element) {\n  const uid = getUidEvent(element)\n\n  element.uidEvent = uid\n  eventRegistry[uid] = eventRegistry[uid] || {}\n\n  return eventRegistry[uid]\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    event.delegateTarget = element\n\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn)\n    }\n\n    return fn.apply(element, [event])\n  }\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector)\n\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\n      for (let i = domElements.length; i--;) {\n        if (domElements[i] === target) {\n          event.delegateTarget = target\n\n          if (handler.oneOff) {\n            // eslint-disable-next-line unicorn/consistent-destructuring\n            EventHandler.off(element, event.type, selector, fn)\n          }\n\n          return fn.apply(target, [event])\n        }\n      }\n    }\n\n    // To please ESLint\n    return null\n  }\n}\n\nfunction findHandler(events, handler, delegationSelector = null) {\n  const uidEventList = Object.keys(events)\n\n  for (let i = 0, len = uidEventList.length; i < len; i++) {\n    const event = events[uidEventList[i]]\n\n    if (event.originalHandler === handler && event.delegationSelector === delegationSelector) {\n      return event\n    }\n  }\n\n  return null\n}\n\nfunction normalizeParams(originalTypeEvent, handler, delegationFn) {\n  const delegation = typeof handler === 'string'\n  const originalHandler = delegation ? delegationFn : handler\n\n  let typeEvent = getTypeEvent(originalTypeEvent)\n  const isNative = nativeEvents.has(typeEvent)\n\n  if (!isNative) {\n    typeEvent = originalTypeEvent\n  }\n\n  return [delegation, originalHandler, typeEvent]\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFn, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return\n  }\n\n  if (!handler) {\n    handler = delegationFn\n    delegationFn = null\n  }\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (customEventsRegex.test(originalTypeEvent)) {\n    const wrapFn = fn => {\n      return function (event) {\n        if (!event.relatedTarget || (event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget))) {\n          return fn.call(this, event)\n        }\n      }\n    }\n\n    if (delegationFn) {\n      delegationFn = wrapFn(delegationFn)\n    } else {\n      handler = wrapFn(handler)\n    }\n  }\n\n  const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn)\n  const events = getEvent(element)\n  const handlers = events[typeEvent] || (events[typeEvent] = {})\n  const previousFn = findHandler(handlers, originalHandler, delegation ? handler : null)\n\n  if (previousFn) {\n    previousFn.oneOff = previousFn.oneOff && oneOff\n\n    return\n  }\n\n  const uid = getUidEvent(originalHandler, originalTypeEvent.replace(namespaceRegex, ''))\n  const fn = delegation ?\n    bootstrapDelegationHandler(element, handler, delegationFn) :\n    bootstrapHandler(element, handler)\n\n  fn.delegationSelector = delegation ? handler : null\n  fn.originalHandler = originalHandler\n  fn.oneOff = oneOff\n  fn.uidEvent = uid\n  handlers[uid] = fn\n\n  element.addEventListener(typeEvent, fn, delegation)\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector)\n\n  if (!fn) {\n    return\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector))\n  delete events[typeEvent][fn.uidEvent]\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {}\n\n  Object.keys(storeElementEvent).forEach(handlerKey => {\n    if (handlerKey.includes(namespace)) {\n      const event = storeElementEvent[handlerKey]\n\n      removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector)\n    }\n  })\n}\n\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.bs.button' --> 'click')\n  event = event.replace(stripNameRegex, '')\n  return customEvents[event] || event\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFn) {\n    addHandler(element, event, handler, delegationFn, false)\n  },\n\n  one(element, event, handler, delegationFn) {\n    addHandler(element, event, handler, delegationFn, true)\n  },\n\n  off(element, originalTypeEvent, handler, delegationFn) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return\n    }\n\n    const [delegation, originalHandler, typeEvent] = normalizeParams(originalTypeEvent, handler, delegationFn)\n    const inNamespace = typeEvent !== originalTypeEvent\n    const events = getEvent(element)\n    const isNamespace = originalTypeEvent.startsWith('.')\n\n    if (typeof originalHandler !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!events || !events[typeEvent]) {\n        return\n      }\n\n      removeHandler(element, events, typeEvent, originalHandler, delegation ? handler : null)\n      return\n    }\n\n    if (isNamespace) {\n      Object.keys(events).forEach(elementEvent => {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1))\n      })\n    }\n\n    const storeElementEvent = events[typeEvent] || {}\n    Object.keys(storeElementEvent).forEach(keyHandlers => {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '')\n\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        const event = storeElementEvent[keyHandlers]\n\n        removeHandler(element, events, typeEvent, event.originalHandler, event.delegationSelector)\n      }\n    })\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null\n    }\n\n    const $ = getjQuery()\n    const typeEvent = getTypeEvent(event)\n    const inNamespace = event !== typeEvent\n    const isNative = nativeEvents.has(typeEvent)\n\n    let jQueryEvent\n    let bubbles = true\n    let nativeDispatch = true\n    let defaultPrevented = false\n    let evt = null\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args)\n\n      $(element).trigger(jQueryEvent)\n      bubbles = !jQueryEvent.isPropagationStopped()\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped()\n      defaultPrevented = jQueryEvent.isDefaultPrevented()\n    }\n\n    if (isNative) {\n      evt = document.createEvent('HTMLEvents')\n      evt.initEvent(typeEvent, bubbles, true)\n    } else {\n      evt = new CustomEvent(event, {\n        bubbles,\n        cancelable: true\n      })\n    }\n\n    // merge custom information in our event\n    if (typeof args !== 'undefined') {\n      Object.keys(args).forEach(key => {\n        Object.defineProperty(evt, key, {\n          get() {\n            return args[key]\n          }\n        })\n      })\n    }\n\n    if (defaultPrevented) {\n      evt.preventDefault()\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt)\n    }\n\n    if (evt.defaultPrevented && typeof jQueryEvent !== 'undefined') {\n      jQueryEvent.preventDefault()\n    }\n\n    return evt\n  }\n}\n\nexport default EventHandler\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}