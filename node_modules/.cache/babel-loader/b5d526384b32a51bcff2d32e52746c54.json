{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data';\nimport { executeAfterTransition, getElement } from './util/index';\nimport EventHandler from './dom/event-handler';\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst VERSION = '5.0.2';\nclass BaseComponent {\n  constructor(element) {\n    element = getElement(element);\n    if (!element) {\n      return;\n    }\n    this._element = element;\n    Data.set(this._element, this.constructor.DATA_KEY, this);\n  }\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY);\n    EventHandler.off(this._element, this.constructor.EVENT_KEY);\n    Object.getOwnPropertyNames(this).forEach(propertyName => {\n      this[propertyName] = null;\n    });\n  }\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated);\n  }\n\n  /** Static */\n\n  static getInstance(element) {\n    return Data.get(element, this.DATA_KEY);\n  }\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);\n  }\n  static get VERSION() {\n    return VERSION;\n  }\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!');\n  }\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`;\n  }\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`;\n  }\n}\nexport default BaseComponent;","map":{"version":3,"names":["Data","executeAfterTransition","getElement","EventHandler","VERSION","BaseComponent","constructor","element","_element","set","DATA_KEY","dispose","remove","off","EVENT_KEY","Object","getOwnPropertyNames","forEach","propertyName","_queueCallback","callback","isAnimated","getInstance","get","getOrCreateInstance","config","NAME","Error"],"sources":["C:/Users/Marcelo Machado/dsCatalog/CatalogoDeProdutos/frontend/catalogodeprodutos/node_modules/bootstrap/js/src/base-component.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data'\nimport {\n  executeAfterTransition,\n  getElement\n} from './util/index'\nimport EventHandler from './dom/event-handler'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst VERSION = '5.0.2'\n\nclass BaseComponent {\n  constructor(element) {\n    element = getElement(element)\n\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    Object.getOwnPropertyNames(this).forEach(propertyName => {\n      this[propertyName] = null\n    })\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  /** Static */\n\n  static getInstance(element) {\n    return Data.get(element, this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  static get DATA_KEY() {\n    return `bs.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n}\n\nexport default BaseComponent\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,IAAI,MAAM,YAAY;AAC7B,SACEC,sBAAsB,EACtBC,UAAU,QACL,cAAc;AACrB,OAAOC,YAAY,MAAM,qBAAqB;;AAE9C;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,OAAO;AAEvB,MAAMC,aAAa,CAAC;EAClBC,WAAWA,CAACC,OAAO,EAAE;IACnBA,OAAO,GAAGL,UAAU,CAACK,OAAO,CAAC;IAE7B,IAAI,CAACA,OAAO,EAAE;MACZ;IACF;IAEA,IAAI,CAACC,QAAQ,GAAGD,OAAO;IACvBP,IAAI,CAACS,GAAG,CAAC,IAAI,CAACD,QAAQ,EAAE,IAAI,CAACF,WAAW,CAACI,QAAQ,EAAE,IAAI,CAAC;EAC1D;EAEAC,OAAOA,CAAA,EAAG;IACRX,IAAI,CAACY,MAAM,CAAC,IAAI,CAACJ,QAAQ,EAAE,IAAI,CAACF,WAAW,CAACI,QAAQ,CAAC;IACrDP,YAAY,CAACU,GAAG,CAAC,IAAI,CAACL,QAAQ,EAAE,IAAI,CAACF,WAAW,CAACQ,SAAS,CAAC;IAE3DC,MAAM,CAACC,mBAAmB,CAAC,IAAI,CAAC,CAACC,OAAO,CAACC,YAAY,IAAI;MACvD,IAAI,CAACA,YAAY,CAAC,GAAG,IAAI;IAC3B,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAACC,QAAQ,EAAEb,OAAO,EAAEc,UAAU,GAAG,IAAI,EAAE;IACnDpB,sBAAsB,CAACmB,QAAQ,EAAEb,OAAO,EAAEc,UAAU,CAAC;EACvD;;EAEA;;EAEA,OAAOC,WAAWA,CAACf,OAAO,EAAE;IAC1B,OAAOP,IAAI,CAACuB,GAAG,CAAChB,OAAO,EAAE,IAAI,CAACG,QAAQ,CAAC;EACzC;EAEA,OAAOc,mBAAmBA,CAACjB,OAAO,EAAEkB,MAAM,GAAG,CAAC,CAAC,EAAE;IAC/C,OAAO,IAAI,CAACH,WAAW,CAACf,OAAO,CAAC,IAAI,IAAI,IAAI,CAACA,OAAO,EAAE,OAAOkB,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAG,IAAI,CAAC;EACnG;EAEA,WAAWrB,OAAOA,CAAA,EAAG;IACnB,OAAOA,OAAO;EAChB;EAEA,WAAWsB,IAAIA,CAAA,EAAG;IAChB,MAAM,IAAIC,KAAK,CAAC,qEAAqE,CAAC;EACxF;EAEA,WAAWjB,QAAQA,CAAA,EAAG;IACpB,OAAQ,MAAK,IAAI,CAACgB,IAAK,EAAC;EAC1B;EAEA,WAAWZ,SAASA,CAAA,EAAG;IACrB,OAAQ,IAAG,IAAI,CAACJ,QAAS,EAAC;EAC5B;AACF;AAEA,eAAeL,aAAa"},"metadata":{},"sourceType":"module"}